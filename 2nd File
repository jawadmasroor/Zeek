# /usr/local/zeek/share/zeek/site/dns_monitor.zeek

# Load the base framework for notices and Input framework
@load base/frameworks/notice
@load base/frameworks/input

# Define the file path for monitored IPs
const monitored_ips_file = "/usr/local/zeek/share/zeek/site/monitored_ips.txt";

# Global set of monitored IPs
global monitored_ips: set[addr] = set();

# Input handler to read IPs from file
event zeek_init() {
    Input::add_event([$source=monitored_ips_file, $name="monitored_ips", $fields=Input::READER_AUTO, $ev=read_ip]);
}

event read_ip(rec: Input::Event) {
    local ip = to_addr(rec$fields[0]);
    if (ip != nil) {
        add monitored_ips[ip];
    } else {
        print fmt("Invalid IP address in monitored IPs file: %s", rec$fields[0]);
    }
}

# Event to handle DNS responses
event dns_response(c: connection, msg: dns_msg, answer: dns_answer)
{
    for (a in answer)
    {
        if (a?$A && a$A in monitored_ips)
        {
            local note = Notice::LOG;
            local msg = fmt("Monitored IP %s found in DNS answer field", a$A);
            NOTICE([$note=note, $msg=msg, $sub=fmt("DNS query for %s", msg$qname), $conn=c]);
        }
    }
}
